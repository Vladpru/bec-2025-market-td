from aiogram import Router, types, F
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
from aiogram.types import ReplyKeyboardRemove, FSInputFile
from bot.keyboards.team import get_have_team_kb
from bot.keyboards.no_team import get_not_team_kb
from bot.keyboards.registration import main_menu_kb
from bot.utils.database import get_user

router = Router()

@router.message(F.text=="–ü–æ—à—É–∫ –∫–æ–º–∞–Ω–¥–∏üîç")
async def get_link(message: types.Message, state: FSMContext):
    await state.clear()
    photo_path = "assets/find_team.png"
    photo_to_send = FSInputFile(photo_path)
    await message.answer_photo(
        photo=photo_to_send,
        caption=f"–ù–µ –º–∞—î—à –∫–æ–º–∞–Ω–¥–∏? –ù–µ –±—ñ–¥–∞! –î–æ—î–¥–Ω–∞–π—Å—è –≤ —Ç–µ–ª–µ–≥—Ä–∞–º-—á–∞—Ç —Ç–∞ –∑–Ω–∞–π–¥–∏ —ó—ó! –û—Å—å –ø–æ—Å–∏–ª–∞–Ω–Ω—è:<a href='https://t.me/+EqpOjlPkgRtjYmEy'>–ü—Ä–∏—î–¥–Ω–∞—Ç–∏—Å—è</a>",
        parse_mode="HTML"
    )

@router.message(F.text=="–ù–∞–∑–∞–¥ –¥–æ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—éüè†")
async def back_to_main_menu(message: types.Message, state: FSMContext):
    await state.clear()
    await message.answer("–ü–æ–≤–µ—Ä—Ç–∞—î–º–æ—Å—è –¥–æ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é...", reply_markup=main_menu_kb())

@router.message(F.text=="–ú–æ—è –∫–æ–º–∞–Ω–¥–∞üèÜ")
async def get_team(message: types.Message, state: FSMContext):
    try:
        await state.clear()
        user_id = message.from_user.id
        if not user_id:
            await message.answer("‚ö†Ô∏è –ù–µ –≤–¥–∞–ª–æ—Å—è –∑–Ω–∞–π—Ç–∏ —Ç–≤–æ—ó –¥–∞–Ω—ñ. –°–ø—Ä–æ–±—É–π —â–µ —Ä–∞–∑ –ø—ñ–∑–Ω—ñ—à–µ.")
            return
        
        user_data = await get_user(user_id)
        if not user_data:
            await message.answer("‚ö†Ô∏è –ù–µ –≤–¥–∞–ª–æ—Å—è –∑–Ω–∞–π—Ç–∏ —Ç–≤–æ—ó –¥–∞–Ω—ñ. –°–ø—Ä–æ–±—É–π —â–µ —Ä–∞–∑ –ø—ñ–∑–Ω—ñ—à–µ.")
            return
        
        
        team_status = user_data.get('team','-')
        if team_status != '-':
            await message.answer_photo(
                photo=FSInputFile("assets/team.png"),
                caption=' –í —Ç–µ–±–µ –≤–∂–µ —î –∫–æ–º–∞–Ω–¥–∞! ',
                parse_mode="HTML",
                reply_markup=get_have_team_kb()
            )
        else:
            await message.answer_photo(
                photo=FSInputFile("assets/team.png"),
                caption=' –í —Ç–µ–±–µ —â–µ –Ω–µ–º–∞ –∫–æ–º–∞–Ω–¥–∏!\n–©–æ–± –≤–∑—è—Ç–∏ —É—á–∞—Å—Ç—å —É –∑–º–∞–≥–∞–Ω–Ω—è—Ö —Ç–æ–±—ñ –ø–æ—Ç—Ä—ñ–±–Ω–∞ –∫–æ–º–∞–Ω–¥–∞! –í–æ–Ω–∞ –ø–æ–≤–∏–Ω–Ω–∞ —Å–∫–ª–∞–¥–∞—Ç–∏—Å—è –∑ 4 —É—á–∞—Å–Ω–∏–∫—ñ–≤. –ú–∞—î—à —Å–≤–æ—é –Ω–µ–ø–µ—Ä–µ–º–æ–∂–Ω—É —á–µ—Ç–≤—ñ—Ä–∫—É? ',
                parse_mode="HTML",
                reply_markup=get_not_team_kb()
            )
    except Exception as e:
        print(f"An error occurred: {str(e)}")
        await message.answer("An error occurred")
        await state.clear()

