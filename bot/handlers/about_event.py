from aiogram import Router, types, F
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
from aiogram.types import ReplyKeyboardRemove, FSInputFile
from bot.keyboards.about_event_kb import get_about_event_kb, get_about_categories_kb
from bot.keyboards.registration import get_reg_kb, main_menu_kb
from bot.utils.database import is_user_registered

router = Router()

class AboutEventStates(StatesGroup):
    about_event = State()
    categories = State()

@router.message(F.text == "–î–µ—Ç–∞–ª—å–Ω—ñ—à–µ –ø—Ä–æ –∑–º–∞–≥–∞–Ω–Ω—èüßê")
async def handle_more_info(message: types.Message, state: FSMContext):
    try:
        photo_path = "assets/more.png"
        photo_to_send = FSInputFile(photo_path)

        await state.set_state(AboutEventStates.about_event)
        await message.answer_photo(
            photo=photo_to_send,
            caption="–¢—É—Ç —Ç–∏ –¥—ñ–∑–Ω–∞—î—à—Å—è –±—ñ–ª—å—à–µ –ø—Ä–æ –∑–º–∞–≥–∞–Ω–Ω—è, –æ—Ä–≥–∞–Ω—ñ–∑–∞—Ç–æ—Ä—ñ–≤, –¥–∞—Ç–∏ —Ç–∞ –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó. –û–±–∏—Ä–∞–π, —â–æ —Ü—ñ–∫–∞–≤–∏—Ç—å!",
            parse_mode="HTML",
            reply_markup=get_about_event_kb()
        )
    except Exception as e:
        await message.answer("–°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞. –°–ø—Ä–æ–±—É–π—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ.")
        print(f"An error occurred: {str(e)}")  

@router.message(F.text == "–û—Ä–≥–∞–Ω—ñ–∑–∞—Ç–æ—Ä–∏ü´Ç")
async def handle_organizers(message: types.Message, state: FSMContext):
    await state.set_state(AboutEventStates.about_event) 
    await message.answer(
        "BEST Lviv (Board of European Students of Technology) ‚Äì –æ—Å–µ—Ä–µ–¥–æ–∫ –º—ñ–∂–Ω–∞—Ä–æ–¥–Ω–æ—ó –≥—Ä–æ–º–∞–¥—Å—å–∫–æ—ó –æ—Ä–≥–∞–Ω—ñ–∑–∞—Ü—ñ—ó, —è–∫–∏–π –æ–±‚Äô—î–¥–Ω—É—î —Å—Ç—É–¥–µ–Ω—Ç—ñ–≤ —Ç–µ—Ö–Ω—ñ—á–Ω–∏—Ö —Å–ø–µ—Ü—ñ–∞–ª—å–Ω–æ—Å—Ç–µ–π. –ù–∞—à–æ—é –º—ñ—Å—ñ—î—é —î —Ä–æ–∑–≤–∏—Ç–æ–∫ —Å—Ç—É–¥–µ–Ω—Ç—ñ–≤ —á–µ—Ä–µ–∑ –æ–±–º—ñ–Ω –∑–Ω–∞–Ω–Ω—è–º–∏ —Ç–∞ —Å–ø—ñ–≤–ø—Ä–∞—Ü—ñ –∫–æ–º–ø–∞–Ω—ñ–π, —É–Ω—ñ–≤–µ—Ä—Å–∏—Ç–µ—Ç—ñ–≤ —Ç–∞ —Å—Ç—É–¥–µ–Ω—Ç—ñ–≤ –Ñ–≤—Ä–æ–ø–∏.",
        parse_mode="HTML",
        reply_markup=get_about_event_kb()
    )

@router.message(F.text == "–©–æ —Ç–∞–∫–µ BEC‚öôÔ∏è")
async def handle_what_is_bec(message: types.Message, state: FSMContext):
    await state.set_state(AboutEventStates.about_event) 
    await message.answer(
        "BEST Engineering Competition (BEC) ‚Äì –±–µ–∑–∫–æ—à—Ç–æ–≤–Ω—ñ —ñ–Ω–∂–µ–Ω–µ—Ä–Ω—ñ –∑–º–∞–≥–∞–Ω–Ω—è –¥–ª—è —Å—Ç—É–¥–µ–Ω—Ç—ñ–≤. –¢—É—Ç —Ç–∏ –±—É–¥–µ—à —Å—Ç–≤–æ—Ä—é–≤–∞—Ç–∏ –ø—Ä–æ—Ç–æ—Ç–∏–ø–∏ –∞–±–æ –∫–æ–Ω—Ü–µ–ø—Ç–∏ –ø—Ä–∏—Å—Ç—Ä–æ—ó–≤ —Ä–∞–∑–æ–º –∑ –∫–æ–º–∞–Ω–¥–æ—é. –¢–∞–∫–æ–∂ –Ω–∞ —Ç–µ–±–µ —á–µ–∫–∞—é—Ç—å –Ω–µ—Ç–≤–æ—Ä–∫—ñ–Ω–≥ –∑ –ø—Ä–µ–¥—Å—Ç–∞–≤–Ω–∏–∫–∞–º–∏ –∫–æ–º–ø–∞–Ω—ñ–π, –∫–æ—Ä–∏—Å–Ω—ñ –ª–µ–∫—Ü—ñ—ó, –≤–æ—Ä–∫—à–æ–ø–∏, –∫–æ–ª–æ –æ–¥–Ω–æ–¥—É–º—Ü—ñ–≤ —Ç–∞ –Ω–µ–π–º–æ–≤—ñ—Ä–Ω—ñ –ø—Ä–∏–∑–∏!\n\n–¢–µ–º–∞ –∑–º–∞–≥–∞–Ω—å: –ü–æ–≤–æ—î–Ω–Ω–µ –≤—ñ–¥–Ω–æ–≤–ª–µ–Ω–Ω—è",
        parse_mode="HTML",
        reply_markup=get_about_event_kb()
    )

@router.message(F.text == "–î–∞—Ç–∞ —Ç–∞ –º—ñ—Å—Ü–µ –ø—Ä–æ–≤–µ–¥–µ–Ω–Ω—èüìÖ")
async def handle_event_date_place(message: types.Message, state: FSMContext):
    await state.set_state(AboutEventStates.about_event) 
    await message.answer(
        "–í—ñ–¥–º—ñ—á–∞–π –≤ –∫–∞–ª–µ–Ω–¥–∞—Ä—ñ 24-28 –∂–æ–≤—Ç–Ω—è! –°–∞–º–µ —Ç–æ–¥—ñ –±—É–¥—É—Ç—å –∑–º–∞–≥–∞–Ω–Ω—è.\n\nBEC –ø–æ–ø–µ—Ä–µ–¥–Ω—å–æ –≤—ñ–¥–±—É–¥–µ—Ç—å—Å—è –Ω–∞ –æ—Ñ—ñ—Å—ñ –∫–æ–º–ø–∞–Ω—ñ—ó GlobalLogic, —â–æ –∑–Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –∑–∞ –∞–¥—Ä–µ—Å–æ—é <a href='https://www.google.com/maps/place/GlobalLogic+LWO7/data=!4m2!3m1!1s0x0:0x14eebe406256a875?sa=X&ved=1t:2428&ictx=111'>–≤—É–ª–∏—Ü—è –ö–æ–∑–µ–ª—å–Ω–∏—Ü—å–∫–∞, 1–ê</a>.\n\n–Ø–∫—â–æ —â–æ—Å—å –∑–º—ñ–Ω–∏—Ç—å—Å—è ‚Äì —Ç–µ–±–µ –æ–±–æ–≤'—è–∑–∫–æ–≤–æ –ø–æ–ø–µ—Ä–µ–¥—è—Ç—å –æ—Ä–≥–∞–Ω—ñ–∑–∞—Ç–æ—Ä–∏.",
        parse_mode="HTML",
        reply_markup=get_about_event_kb()
    )

@router.message(F.text == "–ö–∞—Ç–µ–≥–æ—Ä—ñ—ó –∑–º–∞–≥–∞–Ω—å‚ú®")
async def handle_event_categories(message: types.Message, state: FSMContext):
    photo_path = "assets/tdid.png"
    photo_to_send = FSInputFile(photo_path)
    await state.set_state(AboutEventStates.categories)  
    await message.answer_photo(
        photo=photo_to_send,
        caption="–¢–æ —â–æ –∂, –ø–æ–∑–Ω–∞–π–æ–º–∏—à—Å—è –∑ –Ω–∞—à–∏–º–∏ –∫–∞—Ç–µ–≥–æ—Ä—ñ—è–º–∏? –ê —â–µ –≤–æ–Ω–∏ –º–æ–∂—É—Ç—å —Å–ø—ñ–≤–ø—Ä–∞—Ü—é–≤–∞—Ç–∏ü§´.\n\nInnovative Design\n\n–ö–æ–Ω—Ü–µ–ø—Ç—É–∞–ª—å–Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä—ñ—è, –¥–µ —Ç–∏ –∑ –∫–æ–º–∞–Ω–¥–æ—é –ø—Ä–∏–¥—É–º—É—î—à –Ω–æ–≤–µ –∞–±–æ –≤–¥–æ—Å–∫–æ–Ω–∞–ª–µ–Ω–µ —ñ–Ω–∂–µ–Ω–µ—Ä–Ω–µ —Ä—ñ—à–µ–Ω–Ω—è –¥–ª—è —Ä–µ–∞–ª—å–Ω–æ—ó –ø—Ä–æ–±–ª–µ–º–∏. –í–∞—à–µ –∑–∞–≤–¥–∞–Ω–Ω—è ‚Äì –ø–æ–∫–∞–∑–∞—Ç–∏, —è–∫ —Ü–µ –ø—Ä–∞—Ü—é—î: —á–µ—Ä–µ–∑ –∫—Ä–µ—Å–ª–µ–Ω–Ω—è –∞–±–æ 3D-–º–æ–¥–µ–ª—ñ. –¢—É—Ç –≤–∞–∂–ª–∏–≤–∞ –∫—Ä–µ–∞—Ç–∏–≤–Ω—ñ—Å—Ç—å, —ñ–Ω–Ω–æ–≤–∞—Ü—ñ–π–Ω—ñ—Å—Ç—å —ñ —Ä–µ–∞–ª—ñ—Å—Ç–∏—á–Ω—ñ—Å—Ç—å —Ç–≤–æ—î—ó —ñ–¥–µ—ó.\n\nTeam Design\n\n–ü—Ä–∞–∫—Ç–∏—á–Ω–∞ —ñ–Ω–∂–µ–Ω–µ—Ä–Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä—ñ—è, –¥–µ —Ç–∏ –∑ –∫–æ–º–∞–Ω–¥–æ—é –±—É–¥–µ—à —Ä–æ–∑–≤'—è–∑—É–≤–∞—Ç–∏ —Ç–µ—Ö–Ω—ñ—á–Ω—ñ –∑–∞–¥–∞—á—ñ ‚Äì —É —Å—Ç–∏–ª—ñ –æ—Å—å –ø—Ä–æ–±–ª–µ–º–∞ ‚Äì –∑—Ä–æ–±—ñ—Ç—å –ø—Ä–∏—Å—Ç—Ä—ñ–π, —è–∫–∏–π —ó—ó –≤–∏—Ä—ñ—à—É—î. –ï–ª–µ–∫—Ç—Ä–æ–Ω—ñ–∫–∞, –º–µ—Ö–∞–Ω—ñ–∫–∞, IoT, embedded ‚Äì –≤—Å–µ —Ü–µ –ø—Ä–æ Team Design. –ù–∞ –≤–∏—Ö–æ–¥—ñ ‚Äì —Ä–æ–±–æ—á–∏–π –ø—Ä–æ—Ç–æ—Ç–∏–ø.",
        parse_mode="HTML",
        reply_markup=get_about_categories_kb()
    )

@router.message(F.text == "–°–ø—ñ–≤–ø—Ä–∞—Ü—è –∫–∞—Ç–µ–≥–æ—Ä—ñ–πü§ù")
async def handle_categories_collaboration(message: types.Message, state: FSMContext):
    await message.answer(
        "–û–¥–∏–Ω –∑ –¥–Ω—ñ–≤ –∑–º–∞–≥–∞–Ω—å ‚Äì –∫–æ–º–∞–Ω–¥–∏ Innovative Design –∞–Ω–∞–ª—ñ–∑—É—é—Ç—å –ø—Ä–æ–±–ª–µ–º—É —Ç–∞ –ø—Ä–æ–ø–æ–Ω—É—é—Ç—å —ñ–¥–µ—ó, —è–∫ —ó—ó –≤–∏—Ä—ñ—à–∏—Ç–∏.\n\n–ù–∞—Å—Ç—É–ø–Ω–æ–≥–æ –¥–Ω—è ‚Äì –∫–æ–º–∞–Ω–¥–∏ Team Design –±–µ—Ä—É—Ç—å —Ü—ñ —ñ–¥–µ—ó –π –≤—Ç—ñ–ª—é—é—Ç—å —ó—Ö —É —Ä–µ–∞–ª—å–Ω—ñ –ø—Ä–æ—Ç–æ—Ç–∏–ø–∏.\n\n–Ü –º–æ–∂–ª–∏–≤–æ, —Å–∞–º–µ –≤–∞—à–∞ —ñ–¥–µ—è –∞–±–æ –ø—Ä–∏—Å—Ç—Ä—ñ–π —Å—Ç–∞–Ω–µ –æ—Å–Ω–æ–≤–æ—é –¥–ª—è –º–∞–π–±—É—Ç–Ω—å–æ–≥–æ —Å—Ç–∞—Ä—Ç–∞–ø—É.",
        parse_mode="HTML",
        reply_markup=get_about_categories_kb()
    )

@router.message(F.text == "–ü—Ä–∏–∫–ª–∞–¥–∏ –∑–∞–≤–¥–∞–Ω—åüòâ")
async def handle_task_examples(message: types.Message, state: FSMContext):
    await message.answer(
        "–ü—Ä–∏–∫–ª–∞–¥ Team Design: –†–æ–∑—Ä–æ–±–∏—Ç–∏ —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª—å–Ω—É –º–æ–¥–µ–ª—å —Ç—Ä–∞–ª—å–Ω–∏–∫–∞ –¥–ª—è –ø–æ—à—É–∫—É —Ç–∞ —Ä–æ–∑–º—ñ–Ω—É–≤–∞–Ω–Ω—è –º–æ—Ä—Å—å–∫–∏—Ö –º—ñ–Ω, —è–∫–∏–π –º–æ–∂–µ –∫–µ—Ä—É–≤–∞—Ç–∏—Å—è –≤ —Ä—É—á–Ω–æ–º—É —Ç–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ–º—É —Ä–µ–∂–∏–º—ñ.\n\n–ü—Ä–∏–∫–ª–∞–¥ Innovative Design: –†–æ–∑—Ä–æ–±–∏—Ç–∏ –∫–æ–Ω—Ü–µ–ø—Ü—ñ—é –¥—Ä–æ–Ω–∞, —è–∫–∏–π —Å–∫–∞–Ω—É—î —Ä—É–π–Ω—É–≤–∞–Ω–Ω—è –±—É–¥—ñ–≤–µ–ª—å –¥–ª—è –ø–æ–¥–∞–ª—å—à–æ–≥–æ –∞–Ω–∞–ª—ñ–∑—É —Ç–∞ –ø–ª–∞–Ω—É–≤–∞–Ω–Ω—è –≤—ñ–¥–±—É–¥–æ–≤–∏",
        parse_mode="HTML",
        reply_markup=get_about_categories_kb()
    )

@router.message(F.text == "–ù–∞–∑–∞–¥")
async def handle_back(message: types.Message, state: FSMContext):
    isReg = await is_user_registered(message.from_user.id)
    if isReg:
        await message.answer(
            "–ü–æ–≤–µ—Ä—Ç–∞—î–º–æ—Å—è –¥–æ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é...",
            parse_mode="HTML",
            reply_markup=main_menu_kb()
        )
        await state.clear()
    elif await state.get_state() == AboutEventStates.categories.state:
        await message.answer(
            "–ü–æ–≤–µ—Ä—Ç–∞—î–º–æ—Å—è –¥–æ –∑–∞–≥–∞–ª—å–Ω–æ–≥–æ –º–µ–Ω—é –ø—Ä–æ –∑–º–∞–≥–∞–Ω–Ω—è...",
            parse_mode="HTML",
            reply_markup=get_about_event_kb()
        )
        await state.set_state(AboutEventStates.about_event)
    else:
        await message.answer(
            "–ü–æ–≤–µ—Ä—Ç–∞—î–º–æ—Å—è –¥–æ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó...",
            parse_mode="HTML",
            reply_markup=get_reg_kb()
        )
        await state.clear()